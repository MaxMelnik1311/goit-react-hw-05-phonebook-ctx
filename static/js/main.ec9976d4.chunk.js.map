{"version":3,"sources":["styles.module.css","context/ThemeContext.js","HOC/withThemeContext.js","components/ContactForm/ContactForm.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ThemeToggler/ThemeToggler.js","pages/PhoneBookPage.js","functions/isNameAvailable.js","components/Layout/Layout.js","App.js","index.js"],"names":["module","exports","Context","createContext","ThemeContext","toggleTheme","setState","prevState","night","state","onToggle","Provider","value","this","props","children","Component","Consumer","withThemeContext","WrappedComponent","name","number","handleInputChange","e","preventDefault","target","handleSubmit","submitContactInfo","onSubmit","className","styles","type","onChange","id","deleteContact","onClick","list","map","key","Filter","onChangeFilter","contacts","filter","addContact","person","notyf","Notyf","contact","shortid","generate","some","item","error","contactId","length","changeFilter","getVisibleContacts","toLowerCase","includes","visibleContacts","layoutNight","layoutDay","container","App","PhoneBookPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec9976d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutDay\":\"styles_layoutDay__1rLKv\",\"layoutNight\":\"styles_layoutNight__33ib2\",\"night\":\"styles_night__DPIrl\"};","import React, { Component, createContext } from 'react';\r\nimport T from 'prop-types';\r\n\r\nconst Context = createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState(prevState => ({ night: !prevState.night }));\r\n  };\r\n\r\n  state = {\r\n    night: false,\r\n    onToggle: this.toggleTheme,\r\n  };\r\n\r\n  propTypes = {\r\n    children: T.shape.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ThemeContext from '../context/ThemeContext';\r\n\r\nconst withThemeContext = WrappedComponent => {\r\n  return function WithThemeContext(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {({ night, onToggle }) => (\r\n          <WrappedComponent {...props} night={night} onToggle={onToggle} />\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withThemeContext;\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport withThemeContext from '../../HOC/withThemeContext';\r\nimport styles from '../../styles.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  propTypes = {\r\n    submitContactInfo: T.func.isRequired,\r\n    night: T.bool.isRequired,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.submitContactInfo(this.state.name, this.state.number);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { night } = this.props;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h3 className={night && styles.night}>Name</h3>\r\n          <input\r\n            type=\"name\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n            name=\"name\"\r\n          />\r\n          <h3 className={night && styles.night}>Number</h3>\r\n          <input\r\n            type=\"number\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n            name=\"number\"\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withThemeContext(ContactForm);\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport withThemeContext from '../../HOC/withThemeContext';\r\nimport styles from '../../styles.module.css';\r\n\r\nfunction Contact({ name, number, id, deleteContact, night }) {\r\n  return (\r\n    <li>\r\n      <p className={night && styles.night}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={() => deleteContact(id)}>\r\n        Delete {name} from contact list\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  name: T.string.isRequired,\r\n  number: T.number.isRequired,\r\n  id: T.number.isRequired,\r\n  deleteContact: T.func.isRequired,\r\n  night: T.bool.isRequired,\r\n};\r\n\r\nexport default withThemeContext(Contact);\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport Contact from './Contact';\r\nimport withThemeContext from '../../HOC/withThemeContext';\r\n\r\nfunction ContactList({ list, deleteContact }) {\r\n  return (\r\n    <ul>\r\n      {list.map(({ id, name, number }) => (\r\n        <Contact\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          deleteContact={() => deleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  list: T.arrayOf({}).isRequired,\r\n  deleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default withThemeContext(ContactList);\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"TaskEditor-input\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: T.string.isRequired,\r\n  onChangeFilter: T.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport withThemeContext from '../../HOC/withThemeContext';\r\n\r\nconst ThemeToggler = ({ night, onToggle }) => (\r\n  <>\r\n    <button type=\"button\" onClick={onToggle}>\r\n      {night ? 'Night Regime' : 'Day Regime'}\r\n    </button>\r\n  </>\r\n);\r\n\r\nThemeToggler.propTypes = {\r\n  night: T.bool.isRequired,\r\n  onToggle: T.func.isRequired,\r\n};\r\n\r\nexport default withThemeContext(ThemeToggler);\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { Notyf } from 'notyf';\r\nimport 'notyf/notyf.min.css';\r\nimport T from 'prop-types';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport Filter from '../components/Filter/Filter';\r\nimport ThemeToggler from '../components/ThemeToggler/ThemeToggler';\r\nimport withThemeContext from '../HOC/withThemeContext';\r\nimport styles from '../styles.module.css';\r\n\r\nimport isNameAvailable from '../functions/isNameAvailable';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  propTypes = {\r\n    night: T.bool.isRequired,\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const notyf = new Notyf();\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (isNameAvailable(this.state.contacts, contact.name)) {\r\n      return notyf.error(`${contact.name} is already exists in contacts!`);\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n\r\n    if (this.state.contacts.length <= 2) {\r\n      this.setState({ filter: '' });\r\n    }\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const { night } = this.props;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <h1 className={night && styles.night}>Phonebook</h1>\r\n        <ThemeToggler />\r\n        <ContactForm submitContactInfo={this.addContact} />\r\n        <h2 className={night && styles.night}>Contacts</h2>\r\n\r\n        {contacts.length >= 2 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        <ContactList\r\n          list={visibleContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withThemeContext(App);\r\n","export default function isNameAvailable(contacts, person) {\r\n  return contacts.some(item => item.name === person);\r\n}\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport withThemeContext from '../../HOC/withThemeContext';\r\nimport styles from '../../styles.module.css';\r\n\r\nconst Layout = ({ children, night }) => (\r\n  <div className={night ? styles.layoutNight : styles.layoutDay}>\r\n    <div className={styles.container}>{children}</div>\r\n  </div>\r\n);\r\n\r\nLayout.propTypes = {\r\n  night: T.bool.isRequired,\r\n  children: T.shape.isRequired,\r\n};\r\n\r\nexport default withThemeContext(Layout);\r\n","import React from 'react';\r\nimport PhoneBookPage from './pages/PhoneBookPage';\r\nimport ThemeContext from './context/ThemeContext';\r\nimport Layout from './components/Layout/Layout';\r\n\r\nconst App = () => (\r\n  <ThemeContext>\r\n    <Layout>\r\n      <PhoneBookPage />\r\n    </Layout>\r\n  </ThemeContext>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}